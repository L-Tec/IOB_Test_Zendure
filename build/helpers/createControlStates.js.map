{
  "version": 3,
  "sources": ["../../src/helpers/createControlStates.ts"],
  "sourcesContent": ["/* eslint-disable @typescript-eslint/indent */\r\n\r\nimport { ZendureSolarflow } from \"../main\";\r\n\r\nexport const createControlStates = async (\r\n  adapter: ZendureSolarflow,\r\n  productKey: string,\r\n  deviceKey: string,\r\n  type: string\r\n): Promise<void> => {\r\n  // Create control folder\r\n  await adapter?.extendObject(`${productKey}.${deviceKey}.control`, {\r\n    type: \"channel\",\r\n    common: {\r\n      name: {\r\n        de: \"Steuerung f\u00FCr Ger\u00E4t \" + deviceKey,\r\n        en: \"Control for device \" + deviceKey,\r\n      },\r\n    },\r\n    native: {},\r\n  });\r\n\r\n  if (type != \"smartPlug\") {\r\n    // State zum Setzen des Betriebsmodus\r\n    await adapter?.extendObject(\r\n      `${productKey}.${deviceKey}.control.autoModel`,\r\n      {\r\n        type: \"state\",\r\n        common: {\r\n          name: {\r\n            de: \"Energieplan-Einstellung\",\r\n            en: \"Energyplan\",\r\n          },\r\n          type: \"number\",\r\n          desc: \"autoModel\",\r\n          role: \"value\",\r\n          read: true,\r\n          write: true,\r\n          states: {\r\n            0: \"Nothing\",\r\n            6: \"Battery priority mode\",\r\n            7: \"Appointment mode\",\r\n            8: \"Smart Matching Mode\",\r\n            9: \"Smart CT Mode\",\r\n            10: \"Electricity Price\",\r\n          },\r\n        },\r\n        native: {},\r\n      }\r\n    );\r\n\r\n    adapter?.subscribeStates(`${productKey}.${deviceKey}.control.autoModel`);\r\n\r\n    // State zum Setzen des Charge Limit\r\n    await adapter?.extendObject(\r\n      `${productKey}.${deviceKey}.control.chargeLimit`,\r\n      {\r\n        type: \"state\",\r\n        common: {\r\n          name: {\r\n            de: \"Setzen des Lade-Limits\",\r\n            en: \"Control of the charge limit\",\r\n          },\r\n          type: \"number\",\r\n          desc: \"chargeLimit\",\r\n          role: \"value.battery\",\r\n          read: true,\r\n          write: true,\r\n          min: 40,\r\n          max: 100,\r\n          unit: \"%\",\r\n        },\r\n        native: {},\r\n      }\r\n    );\r\n\r\n    adapter?.subscribeStates(`${productKey}.${deviceKey}.control.chargeLimit`);\r\n\r\n    // State zum Setzen des Discharge Limit\r\n    await adapter?.extendObject(\r\n      `${productKey}.${deviceKey}.control.dischargeLimit`,\r\n      {\r\n        type: \"state\",\r\n        common: {\r\n          name: {\r\n            de: \"Setzen des Entlade-Limits\",\r\n            en: \"Control of the discharge limit\",\r\n          },\r\n          type: \"number\",\r\n          desc: \"dischargeLimit\",\r\n          role: \"value.battery\",\r\n          read: true,\r\n          write: true,\r\n          min: 0,\r\n          max: 50,\r\n          unit: \"%\",\r\n        },\r\n        native: {},\r\n      }\r\n    );\r\n\r\n    adapter?.subscribeStates(\r\n      `${productKey}.${deviceKey}.control.dischargeLimit`\r\n    );\r\n\r\n    // State zum Setzen des Buzzers\r\n    await adapter?.extendObject(\r\n      `${productKey}.${deviceKey}.control.buzzerSwitch`,\r\n      {\r\n        type: \"state\",\r\n        common: {\r\n          name: {\r\n            de: \"Sounds am HUB aktivieren\",\r\n            en: \"Enable buzzer on HUB\",\r\n          },\r\n          type: \"boolean\",\r\n          desc: \"buzzerSwitch\",\r\n          role: \"switch\",\r\n          read: true,\r\n          write: true,\r\n        },\r\n        native: {},\r\n      }\r\n    );\r\n\r\n    adapter?.subscribeStates(`${productKey}.${deviceKey}.control.buzzerSwitch`);\r\n\r\n    if (\r\n      type == \"aio\" ||\r\n      type == \"solarflow\" ||\r\n      type == \"hyper\" ||\r\n      type == \"ace\"\r\n    ) {\r\n      // State zum Setzen des Output Limit\r\n      await adapter?.extendObject(\r\n        `${productKey}.${deviceKey}.control.setOutputLimit`,\r\n        {\r\n          type: \"state\",\r\n          common: {\r\n            name: {\r\n              de: \"Einzustellende Ausgangsleistung\",\r\n              en: \"Control of the output limit\",\r\n            },\r\n            type: \"number\",\r\n            desc: \"setOutputLimit\",\r\n            role: \"value.power\",\r\n            read: true,\r\n            write: true,\r\n            min: 0,\r\n            unit: \"W\",\r\n          },\r\n          native: {},\r\n        }\r\n      );\r\n\r\n      // Subcribe to control states\r\n      adapter?.subscribeStates(\r\n        `${productKey}.${deviceKey}.control.setOutputLimit`\r\n      );\r\n\r\n      // State zum Setzen des Bypass Modus\r\n      await adapter?.extendObject(\r\n        `${productKey}.${deviceKey}.control.passMode`,\r\n        {\r\n          type: \"state\",\r\n          common: {\r\n            name: {\r\n              de: \"Einstellung des Bypass Modus\",\r\n              en: \"Setting of bypass mode\",\r\n            },\r\n            type: \"number\",\r\n            desc: \"passMode\",\r\n            role: \"switch\",\r\n            read: true,\r\n            write: true,\r\n            states: {\r\n              0: \"Automatic\",\r\n              1: \"Always off\",\r\n              2: \"Always on\",\r\n            },\r\n          },\r\n          native: {},\r\n        }\r\n      );\r\n\r\n      adapter?.subscribeStates(`${productKey}.${deviceKey}.control.passMode`);\r\n\r\n      // State zum Setzen des Auto-Modus vom Bypass\r\n      await adapter?.extendObject(\r\n        `${productKey}.${deviceKey}.control.autoRecover`,\r\n        {\r\n          type: \"state\",\r\n          common: {\r\n            name: {\r\n              de: \"Am n\u00E4chsten Tag Bypass auf Automatik\",\r\n              en: \"Automatic recovery of bypass\",\r\n            },\r\n            type: \"boolean\",\r\n            desc: \"autoRecover\",\r\n            role: \"switch\",\r\n            read: true,\r\n            write: true,\r\n          },\r\n          native: {},\r\n        }\r\n      );\r\n\r\n      adapter?.subscribeStates(\r\n        `${productKey}.${deviceKey}.control.autoRecover`\r\n      );\r\n\r\n      // State zum Setzen des Input Limit (AC)\r\n      await adapter?.extendObject(\r\n        `${productKey}.${deviceKey}.control.hubState`,\r\n        {\r\n          type: \"state\",\r\n          common: {\r\n            name: {\r\n              de: \"Verhalten wenn minimale reservierte Ladung erreicht\",\r\n              en: \"Behavior when minimum reserved charge is reached\",\r\n            },\r\n            type: \"number\",\r\n            desc: \"hubState\",\r\n            read: true,\r\n            write: true,\r\n            min: 0,\r\n            max: 1,\r\n            states: {\r\n              0: \"Stop output and standby\",\r\n              1: \"Stop output and shut down\",\r\n            },\r\n          },\r\n          native: {},\r\n        }\r\n      );\r\n\r\n      adapter?.subscribeStates(`${productKey}.${deviceKey}.control.hubState`);\r\n\r\n      if (type == \"solarflow\" || type == \"hyper\" || type == \"ace\") {\r\n        // State zum Setzen des Input Limit (AC)\r\n        await adapter?.extendObject(\r\n          `${productKey}.${deviceKey}.control.setInputLimit`,\r\n          {\r\n            type: \"state\",\r\n            common: {\r\n              name: {\r\n                de: \"Einzustellende Eingangsleistung\",\r\n                en: \"Control of the input limit\",\r\n              },\r\n              type: \"number\",\r\n              desc: \"setInputLimit\",\r\n              role: \"value.power\",\r\n              read: true,\r\n              write: true,\r\n              min: 0,\r\n              max: type == \"ace\" || type == \"solarflow\" ? 900 : 1200,\r\n              step: type == \"ace\" || type == \"solarflow\" ? 100 : 1,\r\n              unit: \"W\",\r\n            },\r\n            native: {},\r\n          }\r\n        );\r\n\r\n        adapter?.subscribeStates(\r\n          `${productKey}.${deviceKey}.control.setInputLimit`\r\n        );\r\n\r\n        // State zum Setzen des AC Schalters\r\n        await adapter?.extendObject(\r\n          `${productKey}.${deviceKey}.control.acSwitch`,\r\n          {\r\n            type: \"state\",\r\n            common: {\r\n              name: {\r\n                de: \"AC Schalter\",\r\n                en: \"AC switch\",\r\n              },\r\n              type: \"boolean\",\r\n              desc: \"acSwitch\",\r\n              role: \"switch\",\r\n              read: true,\r\n              write: true,\r\n            },\r\n            native: {},\r\n          }\r\n        );\r\n\r\n        adapter?.subscribeStates(`${productKey}.${deviceKey}.control.acSwitch`);\r\n\r\n        // State zum Setzen des AC Modus\r\n        await adapter?.extendObject(\r\n          `${productKey}.${deviceKey}.control.acMode`,\r\n          {\r\n            type: \"state\",\r\n            common: {\r\n              name: {\r\n                de: \"AC Modus\",\r\n                en: \"AC mode\",\r\n              },\r\n              type: \"number\",\r\n              desc: \"acMode\",\r\n              role: \"switch\",\r\n              min: 0,\r\n              max: 2,\r\n              step: 1,\r\n              read: true,\r\n              write: true,\r\n              states: {\r\n                0: \"Nothing\",\r\n                1: \"AC input mode\",\r\n                2: \"AC output mode\",\r\n              },\r\n            },\r\n            native: {},\r\n          }\r\n        );\r\n\r\n        adapter?.subscribeStates(`${productKey}.${deviceKey}.control.acMode`);\r\n      }\r\n\r\n      // States for controlling the low voltage block\r\n      if (adapter.config.useLowVoltageBlock) {\r\n        // State zum Setzen des Output Limit\r\n        await adapter?.extendObject(\r\n          `${productKey}.${deviceKey}.control.lowVoltageBlock`,\r\n          {\r\n            type: \"state\",\r\n            common: {\r\n              name: {\r\n                de: \"Niedrige Batteriespannung erkannt\",\r\n                en: \"Low Voltage on battery detected\",\r\n              },\r\n              type: \"boolean\",\r\n              desc: \"lowVoltageBlock\",\r\n              role: \"indicator.lowbat\",\r\n              read: true,\r\n              write: false,\r\n            },\r\n            native: {},\r\n          }\r\n        );\r\n\r\n        adapter?.subscribeStates(\r\n          `${productKey}.${deviceKey}.control.lowVoltageBlock`\r\n        );\r\n\r\n        // State zum Setzen des Output Limit\r\n        await adapter?.extendObject(\r\n          `${productKey}.${deviceKey}.control.fullChargeNeeded`,\r\n          {\r\n            type: \"state\",\r\n            common: {\r\n              name: {\r\n                de: \"Auf 100% laden, Akku muss kalibriert werden!\",\r\n                en: \"Charge to 100%, battery needs to be calibrated\",\r\n              },\r\n              type: \"boolean\",\r\n              desc: \"fullChargeNeeded\",\r\n              role: \"indicator.lowbat\",\r\n              read: true,\r\n              write: false,\r\n            },\r\n            native: {},\r\n          }\r\n        );\r\n\r\n        adapter?.subscribeStates(\r\n          `${productKey}.${deviceKey}.control.fullChargeNeeded`\r\n        );\r\n      }\r\n    }\r\n\r\n    // States only for ACE 1500\r\n    if (type == \"ace\") {\r\n      // State zum Setzen des DC Schalters\r\n      await adapter?.extendObject(\r\n        `${productKey}.${deviceKey}.control.dcSwitch`,\r\n        {\r\n          type: \"state\",\r\n          common: {\r\n            name: {\r\n              de: \"DC Schalter\",\r\n              en: \"DC switch\",\r\n            },\r\n            type: \"boolean\",\r\n            desc: \"dcSwitch\",\r\n            role: \"switch\",\r\n            read: true,\r\n            write: true,\r\n          },\r\n          native: {},\r\n        }\r\n      );\r\n\r\n      adapter?.subscribeStates(`${productKey}.${deviceKey}.control.dcSwitch`);\r\n    }\r\n  }\r\n};\r\n"],
  "mappings": "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",
  "names": []
}
